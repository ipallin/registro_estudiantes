version: '3'

services:
  postgres:
    image: postgres:12.3-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: db_p4ssw0rd
      POSTGRES_USER: db_user
      POSTGRES_DB: studentRecord
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4:4.23
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 5050:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  backend:
    image: python:3.8-slim
    container_name: ${COMPOSE_PROJECT_NAME:-studentRecord}-backend
    environment:
      DEBUG: ${DEBUG:-True}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      API_PORT: ${API_PORT:-5000}
      SECRET_KEY: ${SECRET_KEY:-s3cr3tK3y}
      DB_HOST: ${DB_HOST:-192.168.1.37}
      DB_USER: ${DB_USER:-db_user}
      DB_PASSWORD: ${DB_PASSWORD:-db_p4ssw0rd}
      DB_NAME: ${DB_NAME:-studentRecord}
    ports:
      - ${API_PORT:-5000}:${API_PORT:-5000}
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    command:  sh -c 'pip install --upgrade pip && pip install -r Backend/python-flask/requirements.txt && python  Backend/python-flask/api.py & sleep infinity'


  nginx:
    build:
      dockerfile: ./Dockerfile
      context: Frontend
    restart: always
    ports:
      - "8080:80"

volumes:
  postgres:
  pgadmin:
